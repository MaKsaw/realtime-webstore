@model RealTimeWebStore.Models.ProductModel

@{
    ViewBag.Title = "Welcome to the Pusher t-shite Store";
}

<h2>Welcome to the Pusher t-shirt Store</h2>

@{
    if(ViewBag.Info != null)
    {
        <div class="info">@ViewBag.Info</div>
    }
    
    if(ViewBag.Error != null)
    {
        <div class="error">@ViewBag.Error</div>
    }
}

<div class="product">
    <h3>@Html.DisplayFor(model => model.Title)</h3>
    
    @{
        if (Model.Images != null && Model.Images.Length > 0)
        {
    <img src="@Model.Images[0].ImageUrl" alt="@Model.Images[0].ImageAltText" class="shadow border" />
        }
    }

    <div class="description">
        <p>@Html.DisplayFor(model => model.Description)</p>

        <form class="buy" action="/" method="post">
            @{
                var stockStatusCSSClass = "in-stock";
                if (Model.StockLevel < 0)
                {
                    stockStatusCSSClass = "out-of-stock";
                }
            }

            <div class="stock @stockStatusCSSClass">
                <span class="status">@Model.StockStatus</span>

                <span class="level">@Model.StockLevel</span>
            </div>

            <input name="buy" type="submit" value="Buy" class="shadow border" />
        </form>
    </div>
   
</div>

<script src="http://js.pusherapp.com/1.8/pusher.min.js"></script>
<script>
    Pusher.log = function(message) {
        var msg = document.createTextNode(message);
        var el = document.createElement("div");
        el.className = "log-msg";
        el.appendChild(msg);
        document.body.appendChild(el);
    };

    $(function() {

        var stockLevelEl = $(".product .stock .level");
        var stockStatusEl = $(".product .stock .status");

        var pusher = new Pusher("APP_KEY");
        pusher.bind("pusher:connection_established", function() {
            // we are connected
        });

        var channel = pusher.subscribe("product-@Model.ProductId");

        channel.bind("stockUpdated", function(product) {
            var orgSize = stockLevelEl.css('fontSize');
            animate(stockLevelEl, '8px', function() {
                stockLevelEl.text(product.StockLevel);
                stockStatusEl.text(product.StockStatus);
                animate(stockLevelEl, orgSize);
            });
        })

        function animate(el, to, callback) {
            el.animate({
                'fontSize': to
            }, 600, '', function() {
                if (callback) {
                    callback();
                }
            });
        };
    });
</script>